<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
	
	<title>Creek &nbsp;|&nbsp; Pagwe Cloud</title>
    <meta name="og:title" content="{{app.name}}  &nbsp;|&nbsp; Pagwe Cloud">
	<meta name="twitter:title" content="{{app.name}}  &nbsp;|&nbsp; Pagwe Cloud">

    <meta name="description" content="{{app.description}}">
	<meta name="og:description" content="{{app.description}}">
	<meta name="twitter:description" content="{{app.description}}">
	
    <meta name="twitter:card" content="summary" />
	<meta name="twitter:image" content="{{{app.image}}}">

    <meta name="og:type" content="article" />
	<meta name="og:url" content="https://www.pagwe.net/blog">
	<meta name="og:image" content="{{{app.image}}}">

	<link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="192x192"  href="/android-chrome-192x192.png">
	<link rel="icon" type="image/png" sizes="512x512"  href="/android-chrome-512x512.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
	<link rel="manifest" href="/public/images/site.webmanifest">
	 
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">

	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" integrity="sha512-wnea99uKIC3TJF7v4eKk4Y+lMz2Mklv18+r4na2Gn1abDRPPOeef95xTzdwGD9e6zXJBteMIhZ1+68QC5byJZw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind-dark.min.css" integrity="sha512-5qCImO4bnvlpsqNsYuZEHlzJhEN3MBqd3GZp0QCJS0gVNq3Q+MT9Msw8c4UT2j5Cuq/29kz3jCmgYJpekNqSMQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />

	<!-- Alpine Plugins -->
    <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/persist@3.x.x/dist/cdn.min.js"></script>
 
    <!-- Alpine Core -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<style>
	
	pre {
		tab-size: 4;
		counter-reset: linecounter;
		padding: 0;
		font-size: 16px;
		line-height: 16px;
	}
	pre span.line {
		counter-increment: linecounter;
		line-height: 16px;
	}
	pre span.line::before {
		content: counter(linecounter);
		width: 30px;
		display: inline-block;
		border-right: 1px dotted #ccc;
		padding-right: 3px;
		margin-right: 5px;
		text-align: left;
		font-size: 11px;
		line-height: 16px;
	}
</style>


<script type="text/javascript">

	var project_json = `{{{project_json}}}`;
	var project = JSON.parse(project_json);
	
	


	function addLineClass (pre) {
		var lines = pre.innerText.trim().split("\n"); // can use innerHTML also
		while(pre.childNodes.length > 0) {
			pre.removeChild(pre.childNodes[0]);
		}
		for(var i = 0; i < lines.length; i++) {
			var span = document.createElement("span");
			span.className = "line";
			span.innerText = lines[i]; // can use innerHTML also
			pre.appendChild(span);
			pre.appendChild(document.createTextNode("\n"));
			
			
		}
	}
	window.addEventListener("load", function () {
		var pres = document.querySelectorAll("pre > code ");
		for (var i = 0; i < pres.length; i++) {
			addLineClass(pres[i]);
		}
	}, false);





</script>


</head>


<body class="bg-gray-50 dark:bg-gray-800">
	{{{header_html}}}

    <div class="flex pt-16 overflow-hidden bg-gray-50 dark:bg-gray-900">
        {{{side_bar_html}}}
        <div class="relative lg:px-20 w-full h-full overflow-y-auto bg-gray-50 lg:ml-80 dark:bg-gray-900">
			
			<div x-data="{
				
				title: null,
				description: null,
				image: null,
				video: null,
				lang: 'en',
				tag: null,
				url: null,

				async save_link() {
					console.log('-save_link-start-');
					
					if (!this.title) {
						return;
					}

					let data = {
						title: this.title,
						url: this.url,
					};

					if (this.description) {
						data.description = this.description;
					}

					if (this.image) {
						data.image = this.image;
					}

					if (this.video) {
						data.video = this.video;
					}

					if (this.tag) {
						data.tag = this.tag;
					}

					if (this.lang) {
						data.lang = this.lang;
					}

					let headers = {
						'Content-Type': 'application/json;charset=UTF-8',
						'Authorization': 'Bearer ' + this.my_account.token,
					};

					let config = {
						method: 'post',
						url: '/creek/save',
						data,
						headers,
					};

					this.loading = true;
					try {	
						await axios(config);
						
						window.location.reload(true);
						console.log('-save_link-reload-');
					} finally {
						let self = this;
						
						self.loading = false;	
					}
					console.log('-save_link-end-');
				},

				async parse_link() {
					console.log('-parse_link-start-');
					
					let url = this.url;
					let data = {
						url,
					};

					let headers = {
						'Content-Type': 'application/json;charset=UTF-8',
						'Authorization': 'Bearer ' + this.my_account.token,
					};

					let config = {
						method: 'post',
						url: '/creek/parse',
						data,
						headers,
					};

					this.loading = true;
					try {	
						let resp = await axios(config);
						let card = resp.data;
						
						self.loading = false;	

						this.title = card.title;
						this.description = card.description;
						this.image = card.image;
						this.video = card.video;

						
					} finally {
						let self = this;
						
						self.loading = false;	
					}
					console.log('-parse_link-end-');
				}
			}">
				
				
						
			<template x-if="my_account">
				<div class="pt-4">   
					<label for="link" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">link</label>
					<div class="relative">
						
						<div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
							<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
								<path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244" />
							</svg>

						</div>
						<div>
							<input type="search" x-model="url" id="link" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="share your link here..." required>
							<button :class="loading && 'hidden' " @click="parse_link" class="text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Import</button>
						</div>
					</div>
				</div>
			</template>

			<template x-if="!my_account">
				<div class="pt-4"> 
					<a href="/login" class="text-white right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Login</a>
				</div>
			</template>


					
			<template x-if="title">
				<div>
					<div class="rounded bg-white border-gray-200 shadow-md overflow-hidden relative hover:shadow-lg hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700">
						<a target="_blank" x-bind:href="url" >
							<template x-if="image">
								<img class="h-32 sm:h-48 w-full object-cover" x-bind:src="image" x-bind:alt="title">
							</template>
							
							<div class="m-4">
								<div class="flex justify-between">
									<span class="font-bold dark:text-white" x-text="title"></span>
								</div>
								<span class="block text-gray-500 text-sm" x-text="description"></span>
							</div>
							

						</a>
						<button :class="loading && 'hidden' " @click="save_link" class="text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Save</button>
					</div>

					<div class="mb-6">
						<label for="title" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">title</label>
						<input  x-model="title" type="text" id="title" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
					</div>
					<div class="mb-6">
						<label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">description</label>
						<textarea  x-model="description" id="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Write your thoughts here..."></textarea>
					</div>
					<div class="mb-6">
						<label for="image" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">image</label>
						<input  x-model="image" type="text" id="title" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
					</div>
					<div class="mb-6">
						<label for="video" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">video</label>
						<input  x-model="video" type="text" id="title" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
					</div>
					<div class="mb-6">
						<label for="tag" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">tag</label>
						<input  x-model="tag" type="text" id="title" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
					</div>
					<div class="mb-6">
						<label for="lang" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">lang</label>
						<input  x-model="lang" type="text" id="title" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
					</div>
				</div>
			</template>

			</div>
				
			
			<div class="px-4 pt-6 space-y-8 grid lg:grid-cols-2 lg:gap-4">
				{{{cards_html}}}
			</div>
			<div x-init="render();" class="mt-12 flex justify-center gap-4 text-gray-900 dark:text-white " x-data="{
					page: {{page}},
					page_count: {{page_count}},
					pages: [],

					render() {
						let offset = this.page < 10 ? 0 : this.page - 5;
						let end = this.page + 5 < this.page_count ? this.page + 5 : this.page_count;
						this.pages = Array.from(
										{length: end - offset},
										(_, index) => index + offset
									);
						
					}
				}">
				<a href="/?page=0"><span>First</span></a>
				<template x-for="pg in pages">
					<div>
					<template x-if="pg != page">
						<a x-bind:href="'/?page=' + pg"><span x-text="pg + 1"></span></a>
					</template>
					<template x-if="pg === page">
						<span class="bg-yellow-100 text-yellow-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-yellow-900 dark:text-yellow-300"  x-text="pg + 1"></span>
					</template>
					</div>
				</template>
				<a x-bind:href="'/?page=' + (page_count - 1)"><span>Last</span></a>

			</div>
				
           
			{{{footer_html}}}	
        </div>
    </div>

</body>

</html>