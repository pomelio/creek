import ext.github as github;
import ext.web as web;
import std.array as array;
import ext.mustache as mch;
import std.math as math;
import std.number as number;
import std.date as date;

import modules.common as common;
import modules.creek as creek;

let PAGE_SIZE = 10;

let query = web.query();
let page = 0;
if query['page'] {
  page = number.parse_int(query['page']);
}

let offset = page * PAGE_SIZE;


let project = {};
let project_json = github.get_global_content('/project.json');
if project_json {
    project = parse_json(project_json);
}

let app = {};
let app_json = github.get_app_content('/app.json');
if app_json {
  app = parse_json(app_json);
}
let clazz = 'creek';
let doc = 'creek';
let {html: likes_html, count: likes_count} = common.render_likes_html(clazz, doc);

let side_bar_html = common.render_sidebar(app);

let cards = creek.list_page_cards(PAGE_SIZE, offset);

let cards_count = len(cards);

let end = offset + PAGE_SIZE;

if end > cards_count {
    end = cards_count;
}

let cards_html = [];

for (let i = 0; i < cards_count; i++) {
    let card = cards[i];

    let card_html = creek.render_card(card);
    array.push(cards_html, card_html);
}

let cards_html = array.join(cards_html, '');
  

let HOST_NAME = web.hostname();


let creek_len = creek.get_card_length();


let page_count = math.floor(creek_len / PAGE_SIZE);

let header_html = mch.render_global_template('/template/header.mustache');
let footer_html = common.render_foot_html(project);

let html = mch.render_template('/template/creek/pages.mustache');

web.body(html);

