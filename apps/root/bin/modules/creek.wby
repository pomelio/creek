
import ext.htmlparser as htmlparser;
import ext.pagwelite as lite;
import ext.squel as sql;
import ext.languagedetect as languagedetect;

fn get_card_length() {
    let card_resp = lite.get('select count(*) as len  from card where delete_time = 0', []);
    return card_resp['len'];
}

fn list_page_cards(page_size, offset) {
    return lite.list('select * from card where delete_time = 0 order by create_time desc limit ? offset ? ', [page_size, offset]);
}

fn get_card_by_id(id) {
    return lite.get_by_id('card', id);
}


fn detect_lang(sample) {
    let rows = languagedetect.detect(sample, 1);
    return rows[0][0];
}

fn parse_html_card(url) {
    let card = {};

    let html = fetch('GET', url, null, {}, 'text');

    let last_tag = null;
    let last_text = null;

    htmlparser.parse(html, 
        |name, attributes| => {
            last_tag = name;
            if name == 'meta' {
                if attributes['name'] == 'title' && !card['title'] {
                    card['title'] = attributes['content'];
                }
                if attributes['name'] == 'og:title'  && !card['title'] {
                    card['title'] = attributes['content'];
                }
                if attributes['name'] == 'twitter:title'  && !card['title'] {
                    card['title'] = attributes['content'];
                }

                if attributes['name'] == 'description'  && !card['description'] {
                    card['description'] = attributes['content'];
                }
                if attributes['name'] == 'og:description' && !card['description'] {
                    card['description'] = attributes['content'];
                }
                if attributes['name'] == 'twitter:description' && !card['description'] {
                    card['description'] = attributes['content'];
                }

                
                if attributes['property'] == 'og:image' && !card['image']{
                    card['image'] = attributes['content'];
                }
                if attributes['name'] == 'twitter:image' && !card['image'] {
                    card['image'] = attributes['content'];
                }

                if attributes['property'] == 'og:video:url' && !card['video'] {
                    card['video'] = attributes['content'];
                }
                

            }

        }, |text| => {
            if last_tag == 'title' {
            last_text = text;
        }
        
        
        }, |name| => {
            if name == 'title' && !card['title'] {
                card['title'] = last_text;
                last_text = null;
            }
        }
    );

    return card;
}


fn save_card(card) {

    sql.insert();
    sql.into('card');
    sql.set('id', card['id']);
    sql.set('title', card['title']);
    sql.set('url', card['url']);

    if card['description'] {
        sql.set('description', card['description']);
    }

    if card['image'] {
        sql.set('image', card['image']);
    }

    if card['video'] {
        sql.set('video', card['video']);
    }

    if card['tag'] {
        sql.set('tag', card['tag']);
    }

    if card['lang'] {
        sql.set('lang', card['lang']);
    }
    sql.set('user_id', card['user_id']);
    sql.set('create_time', card['create_time']);

    let sql_text = sql.get_sql_text();
    let sql_values = sql.get_sql_values();
    lite.update(sql_text, sql_values);
}

